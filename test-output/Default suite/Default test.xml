<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="DESKTOP-GQRGP5O" failures="0" tests="1" name="Default test" time="1.231" errors="0" timestamp="2023-08-05T17:38:39 IST">
  <testcase classname="org.ecocrewFramework.TestUtils.BaseTest" name="@BeforeClass configureAppium" time="1.146">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. 
Host info: host: &amp;apos;DESKTOP-GQRGP5O&amp;apos;, ip: &amp;apos;192.168.29.77&amp;apos;
Build info: version: &amp;apos;4.11.0&amp;apos;, revision: &amp;apos;040bc5406b&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;11.0.18&amp;apos;
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:deviceName=samsung SM-A305F, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=D:\automationProjects\src\test\java\resources\ecocrewuserapp.apk}], desiredCapabilities=Capabilities {appium:app: D:\automationProjects\src\t..., appium:automationName: UIAutomator2, appium:deviceName: samsung SM-A305F, platformName: ANDROID}}]
Capabilities {appium:app: D:\automationProjects\src\t..., appium:automationName: UIAutomator2, appium:deviceName: samsung SM-A305F, platformName: ANDROID}">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Possible causes are invalid address of the remote server or browser start-up failure. 
Host info: host: 'DESKTOP-GQRGP5O', ip: '192.168.29.77'
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '11.0.18'
Driver info: io.appium.java_client.android.AndroidDriver
Command: [null, newSession {capabilities=[{appium:deviceName=samsung SM-A305F, platformName=ANDROID, appium:automationName=UIAutomator2, appium:app=D:\automationProjects\src\test\java\resources\ecocrewuserapp.apk}], desiredCapabilities=Capabilities {appium:app: D:\automationProjects\src\t..., appium:automationName: UIAutomator2, appium:deviceName: samsung SM-A305F, platformName: ANDROID}}]
Capabilities {appium:app: D:\automationProjects\src\t..., appium:automationName: UIAutomator2, appium:deviceName: samsung SM-A305F, platformName: ANDROID}
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:536)
at io.appium.java_client.AppiumDriver.startSession(AppiumDriver.java:274)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:159)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:101)
at io.appium.java_client.android.AndroidDriver.<init>(AndroidDriver.java:113)
at org.ecocrewFramework.TestUtils.BaseTest.configureAppium(BaseTest.java:46)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:63)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:348)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:302)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NoSuchMethodError: org.openqa.selenium.json.Json.toJson(Ljava/lang/Object;I)Ljava/lang/String;
at org.openqa.selenium.remote.NewSessionPayload.create(NewSessionPayload.java:126)
at org.openqa.selenium.remote.NewSessionPayload.create(NewSessionPayload.java:111)
at org.openqa.selenium.remote.NewSessionPayload.create(NewSessionPayload.java:105)
at io.appium.java_client.remote.AppiumProtocolHandshake.createSession(AppiumProtocolHandshake.java:101)
at io.appium.java_client.remote.AppiumCommandExecutor.createSession(AppiumCommandExecutor.java:182)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
... 32 more
]]>
    </failure>
  </testcase> <!-- @BeforeClass configureAppium -->
  <testcase classname="org.ecocrewFramework.TestUtils.BaseTest" name="@AfterClass tearDown" time="-1.691237319797E9">
    <skipped/>
  </testcase> <!-- @AfterClass tearDown -->
  <testcase classname="org.ecocrewFramework.RaisePickupRequestTest" name="raisePickupRequest" time="0.0">
    <skipped/>
  </testcase> <!-- raisePickupRequest -->
</testsuite> <!-- Default test -->
